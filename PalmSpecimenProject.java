/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/*By Group 7
64854 MOHAMAD HAFIZ BIN SULAIMAN 
64618 ALLISTAIR NALLIE ANAK KONSIL 
66722 MOHD NUR HAZIQ IRSYAMUDDIN BIN JUNAIDI 
68186 ZAINALABDEEN ALI SABRY 7
65554 BHAVITHRA A/P ARUMAINATHAN */

package PalmSpecimenProject;

import java.awt.Image;
import java.awt.print.PrinterException;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.TimeZone;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author user
 */
public class PalmSpecimenProject extends javax.swing.JFrame {

    DatabaseConnection dbConn = new DatabaseConnection();
    String plantID = "";
    String plantCommonName = "";
    String plantGenus = "";
    String plantSpecies = "";
    String plantStem = "";
    String plantLeaf = "";
    String plantDate = "";
    String plantTime = "";
    String plantLocation = "";
    String plantImagePath = "";
    String plantImageName = "";
    Connection connx;
    static DefaultTableModel model;
    int currentPosition = 0;
    PalmSpecimenProjectDataAccessObject dao = new PalmSpecimenDataAccessObjectImplementation();

    /**
     * Creates new form PalmSpecimenProject
     */
    public PalmSpecimenProject() {
        initComponents();
        connx = dbConn.databaseConnection();
        // populating JTable
        dao.populateJTableFromMysqlDatabase(model, jTable1, "");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldID = new javax.swing.JTextField();
        jTextFieldPlantCommonName = new javax.swing.JTextField();
        jTextFieldPlantSpecies = new javax.swing.JTextField();
        jTextFieldPlantStem = new javax.swing.JTextField();
        jTextFieldPlantLeaf = new javax.swing.JTextField();
        jTextFieldImageName = new javax.swing.JTextField();
        jComboBoxPlantLocation = new javax.swing.JComboBox<>();
        jLabelImage = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jTextFieldImageFilePath = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jDateChooserPlantDate = new com.toedter.calendar.JDateChooser();
        jLabel12 = new javax.swing.JLabel();
        jTextFieldPlantGenus = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jButtonNextItemInList = new javax.swing.JButton();
        jButtonPreviousItemInList = new javax.swing.JButton();
        Calendar cal = Calendar.getInstance();
        cal.set(Calendar.HOUR_OF_DAY, 0);
        cal.set(Calendar.MINUTE, 0);

        Date startTime = cal.getTime();
        cal.set(Calendar.HOUR, 23);
        cal.set(Calendar.MINUTE, 59);
        Date endTime = cal.getTime();

        SpinnerDateModel model =
        new SpinnerDateModel(startTime, null, endTime, Calendar.MINUTE);
        jSpinner1 = new javax.swing.JSpinner(model);
        jTextFieldSearch = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Common Name :");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("ID                       :");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Genus                 :");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Species               :");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Characteristic");
        jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Stem                  :");
        jLabel6.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Leaf                    :");
        jLabel7.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Date                  :");
        jLabel8.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Location            :");
        jLabel9.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Image Path       :");
        jLabel10.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("Image Name     :");
        jLabel11.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jTextFieldID.setEnabled(false);
        jTextFieldID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIDActionPerformed(evt);
            }
        });

        jTextFieldPlantSpecies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPlantSpeciesActionPerformed(evt);
            }
        });

        jTextFieldPlantLeaf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPlantLeafActionPerformed(evt);
            }
        });

        jTextFieldImageName.setEnabled(false);

        jComboBoxPlantLocation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kubah National Park", "Bako National ", "Mount Santubong" }));
        jComboBoxPlantLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxPlantLocationActionPerformed(evt);
            }
        });

        jLabelImage.setBackground(new java.awt.Color(204, 255, 255));
        jLabelImage.setOpaque(true);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PalmSpecimenProject/Icons/plus-circle-solid.png"))); // NOI18N
        jButton1.setText("   Add");
        jButton1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PalmSpecimenProject/Icons/sync-alt-solid.png"))); // NOI18N
        jButton2.setText(" Update");
        jButton2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PalmSpecimenProject/Icons/trash-alt-solid original.png"))); // NOI18N
        jButton3.setText(" Delete");
        jButton3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PalmSpecimenProject/Icons/file-excel-solid.png"))); // NOI18N
        jButton4.setText(" Export (Excel)");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PalmSpecimenProject/Icons/times-circle-solid.png"))); // NOI18N
        jButton5.setText("  Clear");
        jButton5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jTextFieldImageFilePath.setEnabled(false);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Common Name", "Genus", "Species", "Stem", "Leaf", "Location", "Image Name", "Image Path", "Date", "Time"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PalmSpecimenProject/Icons/image-solid.png"))); // NOI18N
        jButton6.setText("Image Select");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("Time                  :");
        jLabel12.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jTextFieldPlantGenus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPlantGenusActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PalmSpecimenProject/Icons/print-solid.png"))); // NOI18N
        jButton7.setText(" Print");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButtonNextItemInList.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonNextItemInList.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PalmSpecimenProject/Icons/chevron-circle-right-solid.png"))); // NOI18N
        jButtonNextItemInList.setText("     Next     ");
        jButtonNextItemInList.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        jButtonNextItemInList.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        jButtonNextItemInList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNextItemInListActionPerformed(evt);
            }
        });

        jButtonPreviousItemInList.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonPreviousItemInList.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PalmSpecimenProject/Icons/chevron-circle-left-solid.png"))); // NOI18N
        jButtonPreviousItemInList.setText("     Prev");
        jButtonPreviousItemInList.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButtonPreviousItemInList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPreviousItemInListActionPerformed(evt);
            }
        });

        jSpinner1.setEditor(new JSpinner.DateEditor(jSpinner1, "HH:mm"));
        jSpinner1.setValue(startTime);

        jTextFieldSearch.setText("Search");
        jTextFieldSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldSearchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldSearchFocusLost(evt);
            }
        });
        jTextFieldSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSearchActionPerformed(evt);
            }
        });
        jTextFieldSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldSearchKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(146, 146, 146)
                        .addComponent(jButtonPreviousItemInList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextFieldPlantLeaf, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextFieldPlantStem, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(73, 73, 73)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jTextFieldPlantCommonName, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldPlantSpecies, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldPlantGenus, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(72, 72, 72)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldImageFilePath, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                            .addComponent(jComboBoxPlantLocation, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextFieldImageName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                            .addComponent(jDateChooserPlantDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSpinner1))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelImage, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE))
                        .addGap(26, 26, 26))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jButtonNextItemInList, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                        .addGap(79, 79, 79)
                        .addComponent(jButton4)
                        .addGap(38, 38, 38)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(44, 44, 44))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jDateChooserPlantDate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldPlantCommonName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel12)
                            .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel9)
                            .addComponent(jTextFieldPlantGenus, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxPlantLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextFieldPlantSpecies, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(jTextFieldImageName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jTextFieldImageFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldPlantStem, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jTextFieldPlantLeaf, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabelImage, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonNextItemInList, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonPreviousItemInList, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIDActionPerformed

    private void jTextFieldPlantSpeciesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPlantSpeciesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPlantSpeciesActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        plantCommonName = jTextFieldPlantCommonName.getText();
        plantGenus = jTextFieldPlantGenus.getText();
        plantSpecies = jTextFieldPlantSpecies.getText();
        plantStem = jTextFieldPlantStem.getText();
        plantLeaf = jTextFieldPlantLeaf.getText();
        plantLocation = jComboBoxPlantLocation.getSelectedItem().toString();
        plantImageName = jTextFieldImageName.getText();
        plantImagePath = jTextFieldImageFilePath.getText();
        SimpleDateFormat timeFormat = new SimpleDateFormat("HH:mm");
        plantTime = timeFormat.format(jSpinner1.getValue());

        if (jDateChooserPlantDate.getDate() != null) {
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            plantDate = dateFormat.format(jDateChooserPlantDate.getDate());
        } else {
            plantDate = "";
        }

        if (plantCommonName.isEmpty() || plantGenus.isEmpty() || plantSpecies.isEmpty() || plantStem.isEmpty()
                || plantLeaf.isEmpty() || plantLocation.isEmpty() || plantImageName.isEmpty() || plantImagePath.isEmpty()
                || plantDate.isEmpty() || plantTime.isEmpty()) {
            JOptionPane.showMessageDialog(null, "All Fields Must be Filled !!");
        } else {
            File plantFile = new File(plantImagePath);
            try {

                InputStream plantIS = new FileInputStream(plantFile);
                String plantInsertSQLQuery = "INSERT INTO `palmspecimenprojecttable`(`CommonName`, `Genus`, `Species`, `Stem`, `Leaf`, `Location`, `ImageName`, `ImagePath`, `ImageFile`, `Date`, `Time`) VALUES (?,?,?,?,?,?,?,?,?,?,?)";
                PreparedStatement plantPST = this.connx.prepareStatement(plantInsertSQLQuery);
                plantPST.setString(1, plantCommonName);
                plantPST.setString(2, plantGenus);
                plantPST.setString(3, plantSpecies);
                plantPST.setString(4, plantStem);
                plantPST.setString(5, plantLeaf);
                plantPST.setString(6, plantLocation);
                plantPST.setString(7, plantImageName);
                plantPST.setString(8, plantImagePath);
                plantPST.setBlob(9, plantIS);
                plantPST.setString(10, plantDate);
                plantPST.setString(11, plantTime);

                int plantInserted = plantPST.executeUpdate();
                if (plantInserted > 0) {
                    JOptionPane.showMessageDialog(null, "Inserted Successfuly...");
                    clearAllInputFromFields();
                    // refresh JTable after adding new entry to database
                    dao.populateJTableFromMysqlDatabase(model, jTable1, "");
                    currentPosition = 0;
                }

            } catch (FileNotFoundException ex) {
                Logger.getLogger(PalmSpecimenProject.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(PalmSpecimenProject.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextFieldPlantLeafActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPlantLeafActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPlantLeafActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        plantID = jTextFieldID.getText();
        plantCommonName = jTextFieldPlantCommonName.getText();
        plantGenus = jTextFieldPlantGenus.getText();
        plantSpecies = jTextFieldPlantSpecies.getText();
        plantStem = jTextFieldPlantStem.getText();
        plantLeaf = jTextFieldPlantLeaf.getText();
        plantLocation = jComboBoxPlantLocation.getSelectedItem().toString();
        plantImageName = jTextFieldImageName.getText();
        plantImagePath = jTextFieldImageFilePath.getText();
        SimpleDateFormat timeFormat = new SimpleDateFormat("HH:mm");
        plantTime = timeFormat.format(jSpinner1.getValue());

        if (jDateChooserPlantDate.getDate() != null) {
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            plantDate = dateFormat.format(jDateChooserPlantDate.getDate());
        } else {
            plantDate = "";
        }

        if (plantID.isEmpty() || plantCommonName.isEmpty() || plantGenus.isEmpty() || plantSpecies.isEmpty() || plantStem.isEmpty()
                || plantLeaf.isEmpty() || plantLocation.isEmpty() || plantImageName.isEmpty() || plantImagePath.isEmpty()
                || plantDate.isEmpty() || plantTime.isEmpty()) {
            JOptionPane.showMessageDialog(null, "All Fields Must be Filled !!");
        } else {

            Connection dbconnection = null;
            PreparedStatement preparedStatement = null;
            String updateSQLQuery = "UPDATE `palmspecimenprojecttable` SET `CommonName`=?,`Genus`=?,`Species`=?,`Stem`=?,`Leaf`=?,`Location`=?,`ImageName`=?,`ImagePath`=?,`ImageFile`=?,`Date`=?,`Time`=? WHERE ID =?";
            dbconnection = this.connx;
            File plantFile = new File(plantImagePath);

            try {
                InputStream plantIS = new FileInputStream(plantFile);
                preparedStatement = dbconnection.prepareStatement(updateSQLQuery);
                preparedStatement.setString(1, plantCommonName);
                preparedStatement.setString(2, plantGenus);
                preparedStatement.setString(3, plantSpecies);
                preparedStatement.setString(4, plantStem);
                preparedStatement.setString(5, plantLeaf);
                preparedStatement.setString(6, plantLocation);
                preparedStatement.setString(7, plantImageName);
                preparedStatement.setString(8, plantImagePath);
                preparedStatement.setBlob(9, plantIS);
                preparedStatement.setString(10, plantDate);
                preparedStatement.setString(11, plantTime);
                preparedStatement.setInt(12, Integer.parseInt(plantID));

                int plantUpdated = preparedStatement.executeUpdate();
                if (plantUpdated > 0) {
                    JOptionPane.showMessageDialog(null, "Updated Sucessfully...");
                    // Clear Input Fields After Deletion
                    clearAllInputFromFields();
                    // Refresh JTable to remove deleted row
                    dao.populateJTableFromMysqlDatabase(model, jTable1, "");
                    currentPosition = 0;
                }

            } catch (SQLException ex) {
                Logger.getLogger(PalmSpecimenProject.class.getName()).log(Level.SEVERE, null, ex);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(PalmSpecimenProject.class.getName()).log(Level.SEVERE, null, ex);
            } finally {

                // Close PreparedStatement
                if (preparedStatement != null) {
                    try {
                        preparedStatement.close();
                    } catch (SQLException ex) {
                        Logger.getLogger(PalmSpecimenProject.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        // Delete Data From Mysql Database 

        if (jTextFieldID.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "ID Field is Empty");
        } else {

            Connection dbconnection = null;
            PreparedStatement pStatement = null;
            String deleteSQLQuery = "DELETE FROM `palmspecimenprojecttable` WHERE `ID` = ?";

            try {
                dbconnection = this.connx;
                pStatement = dbconnection.prepareStatement(deleteSQLQuery);
                pStatement.setInt(1, Integer.parseInt(jTextFieldID.getText()));
                int deleteSTMT = pStatement.executeUpdate();

                if (deleteSTMT > 0) {
                    JOptionPane.showMessageDialog(null, "Deleted Sucessfully...");
                    // Clear Input Fields After Deletion
                    clearAllInputFromFields();
                    // Refresh JTable to remove deleted row
                    dao.populateJTableFromMysqlDatabase(model, jTable1, "");
                    currentPosition = 0;
                }
            } catch (SQLException ex) {
                Logger.getLogger(PalmSpecimenProject.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                // Close connection
                try {
                    if (pStatement != null) {
                        pStatement.close();
                    }
//                    if (dbconnection != null) {
//                        dbconnection.close();
//                    }
                } catch (SQLException sQLException) {
                    sQLException.getMessage();
                }
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:

        // Set Default Directory for excel export
        String CurrentDirectoryFilePath = "C:\\Users\\user\\Pictures\\Export";
        JFileChooser excelExportChooser = new JFileChooser(CurrentDirectoryFilePath);
        // Filter Only excel Files
        FileNameExtensionFilter excelFNEF = new FileNameExtensionFilter("EXCEL FILES", "xls", "xlsx", "xlsm");
        excelExportChooser.setFileFilter(excelFNEF);
        // Set Dialog Box Title
        excelExportChooser.setDialogTitle("Save Excel...");
        int excelChooser = excelExportChooser.showSaveDialog(null);
        if (excelChooser == JFileChooser.APPROVE_OPTION) {

            // Add excel library to classpath
            XSSFWorkbook excelXSSfWorkbookExporter = new XSSFWorkbook();
            XSSFSheet excelSheet = excelXSSfWorkbookExporter.createSheet("JTable Plant Data");

            // Loop through JTable columns and rows
            for (int i = 0; i < model.getRowCount(); i++) {
                XSSFRow excelRow = excelSheet.createRow(i);

                for (int j = 0; j < model.getColumnCount(); j++) {
                    XSSFCell excelCell = excelRow.createCell(j);

                    excelCell.setCellValue(model.getValueAt(i, j).toString());
                }
            }

            // Create unique name by using existing excel file names and appending  .xlsx
            FileOutputStream excelaFOS;
            BufferedOutputStream excelBOU;
            try {
                excelaFOS = new FileOutputStream(excelExportChooser.getSelectedFile() + ".xlsx");
                excelBOU = new BufferedOutputStream(excelaFOS);
                excelXSSfWorkbookExporter.write(excelBOU);
                excelBOU.close();
                excelXSSfWorkbookExporter.close();
            } catch (IOException iOException) {
            }

        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        clearAllInputFromFields();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        String currentDirectoryPath = "C:\\Users\\user\\Pictures\\Sample";
        JFileChooser imageFileChooser = new JFileChooser(currentDirectoryPath);
        int imageChooser = imageFileChooser.showOpenDialog(null);
        imageFileChooser.setDialogTitle("Choose Image...");
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("IMAGES", "png", "jpg", "jpeg");
        imageFileChooser.setFileFilter(fnef);

        if (imageChooser == JFileChooser.APPROVE_OPTION) {
            File imageFile = imageFileChooser.getSelectedFile();
            String imageName = imageFile.getName();
            String imageFilePath = imageFile.getAbsolutePath();

            //Display image name in a textbox
            jTextFieldImageName.setText(imageName);
            jTextFieldImageFilePath.setText(imageFilePath);

            ImageIcon imageIcon = new ImageIcon(imageFilePath);
            //Resize Image to Fit JLabel
            Image image = imageIcon.getImage().getScaledInstance(jLabelImage.getWidth(), jLabelImage.getHeight(), Image.SCALE_SMOOTH);
            //Display image on JLabel
            ImageIcon resizedImageIcon = new ImageIcon(image);
            jLabelImage.setIcon(resizedImageIcon);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTextFieldPlantGenusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPlantGenusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPlantGenusActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:

        // Display selected row on input fields
        int jTableSelectedRow = jTable1.getSelectedRow();

        // make currentPosition start counting from the selected JTable row
        currentPosition = jTableSelectedRow;
        selectPlants(jTableSelectedRow);
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        try {
            // TODO add your handling code here:

            boolean printJTable = jTable1.print();
            if (!printJTable) {
                JOptionPane.showMessageDialog(null, "Unable to Print Summary...");
            } else {
                JOptionPane.showMessageDialog(null, "Document Printed Successfully...");
            }
        } catch (PrinterException ex) {
            Logger.getLogger(PalmSpecimenProject.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButtonNextItemInListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNextItemInListActionPerformed
        // TODO add your handling code here:

        selectPlants(currentPosition);
        // Increment currentPositon to display next item on input fields
        currentPosition++;

        // Upon reaching the last item, move to the first item
        if (currentPosition > dao.plantsList("").size() - 1) {
            currentPosition = 0;
        }
    }//GEN-LAST:event_jButtonNextItemInListActionPerformed

    private void jButtonPreviousItemInListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPreviousItemInListActionPerformed
        // TODO add your handling code here:

        // Decrement currentPositon to display next item on input fields
        selectPlants(currentPosition);
        currentPosition--;

        // Upon reaching the last item, move to the first item
        if (currentPosition < 0) {
            currentPosition = dao.plantsList("").size() - 1;
        }
    }//GEN-LAST:event_jButtonPreviousItemInListActionPerformed

    private void jComboBoxPlantLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxPlantLocationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxPlantLocationActionPerformed

    private void jTextFieldSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSearchActionPerformed

    private void jTextFieldSearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldSearchFocusGained
        // TODO add your handling code here:
        if (jTextFieldSearch.getText().equals("Search")) {
            jTextFieldSearch.setText("");
        }
    }//GEN-LAST:event_jTextFieldSearchFocusGained

    private void jTextFieldSearchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldSearchFocusLost
        // TODO add your handling code here:
        if (jTextFieldSearch.getText().equals("")) {
            jTextFieldSearch.setText("Search");
        }

    }//GEN-LAST:event_jTextFieldSearchFocusLost

    private void jTextFieldSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSearchKeyReleased
        // TODO add your handling code here:
        dao.populateJTableFromMysqlDatabase(model, jTable1, jTextFieldSearch.getText());
    }//GEN-LAST:event_jTextFieldSearchKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PalmSpecimenProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PalmSpecimenProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PalmSpecimenProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PalmSpecimenProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PalmSpecimenProject().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButtonNextItemInList;
    private javax.swing.JButton jButtonPreviousItemInList;
    private javax.swing.JComboBox<String> jComboBoxPlantLocation;
    private com.toedter.calendar.JDateChooser jDateChooserPlantDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelImage;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldID;
    private javax.swing.JTextField jTextFieldImageFilePath;
    private javax.swing.JTextField jTextFieldImageName;
    private javax.swing.JTextField jTextFieldPlantCommonName;
    private javax.swing.JTextField jTextFieldPlantGenus;
    private javax.swing.JTextField jTextFieldPlantLeaf;
    private javax.swing.JTextField jTextFieldPlantSpecies;
    private javax.swing.JTextField jTextFieldPlantStem;
    private javax.swing.JTextField jTextFieldSearch;
    // End of variables declaration//GEN-END:variables

    private void clearAllInputFromFields() {
        jTextFieldID.setText("");
        jTextFieldPlantCommonName.setText("");
        jTextFieldPlantGenus.setText("");
        jTextFieldPlantSpecies.setText("");
        jTextFieldPlantStem.setText("");
        jTextFieldPlantLeaf.setText("");
        jComboBoxPlantLocation.setSelectedIndex(0);
        jTextFieldImageName.setText("");
        jTextFieldImageFilePath.setText("");
        jLabelImage.setIcon(null);
        jDateChooserPlantDate.setDate(null);
        Calendar cal = Calendar.getInstance();
        cal.set(Calendar.HOUR_OF_DAY, 0);
        cal.set(Calendar.MINUTE, 0);
        Date startTime = cal.getTime();
        jSpinner1.setValue(startTime);
        jTextFieldSearch.setText("Search");
        dao.populateJTableFromMysqlDatabase(model, jTable1, "");
    }

    private void selectPlants(int counter) {
        jTextFieldID.setText(Integer.toString(dao.plantsList("").get(counter).getID()));
        jTextFieldPlantCommonName.setText(dao.plantsList("").get(counter).getCommonName());
        jTextFieldPlantGenus.setText(dao.plantsList("").get(counter).getGenus());
        jTextFieldPlantSpecies.setText(dao.plantsList("").get(counter).getSpecies());
        jTextFieldPlantStem.setText(dao.plantsList("").get(counter).getStem());
        jTextFieldPlantLeaf.setText(dao.plantsList("").get(counter).getLeaf());
        String location = dao.plantsList("").get(counter).getLocation();
        for (int i = 0; i < jComboBoxPlantLocation.getItemCount(); i++) {
            if (jComboBoxPlantLocation.getItemAt(i).equalsIgnoreCase(location)) {
                jComboBoxPlantLocation.setSelectedIndex(i);
            }
        }
        jTextFieldImageName.setText(dao.plantsList("").get(counter).getImageName());
        jTextFieldImageFilePath.setText(dao.plantsList("").get(counter).getImagePath());
        jLabelImage.setIcon(new ImageIcon(new ImageIcon(dao.plantsList("").get(counter).getImageFile()).getImage().getScaledInstance(jLabelImage.getWidth(), jLabelImage.getHeight(), Image.SCALE_SMOOTH)));
        Date dbDate;
        Date dbTime;
        SimpleDateFormat timeOffset = new SimpleDateFormat("HH:mm");
        timeOffset.setTimeZone(TimeZone.getTimeZone("GMT-0:00"));
        
        try {
            dbDate = new SimpleDateFormat("yyyy-MM-dd").parse(dao.plantsList("").get(counter).getDate().toString());    
            dbTime = new SimpleDateFormat("HH:mm").parse(timeOffset.format((dao.plantsList("").get(counter).getTime())));
            
            jDateChooserPlantDate.setDate(dbDate);
            jSpinner1.setValue(dbTime);
            
            
        } catch (ParseException ex) {
            Logger.getLogger(PalmSpecimenProject.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
}
